import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

const Analytics = () => {
  const [period, setPeriod] = useState('week');

  const analyticsData = {
    visitors: { value: '12,847', change: '+23%', trend: 'up' },
    pageviews: { value: '45,621', change: '+12%', trend: 'up' },
    bounceRate: { value: '34.2%', change: '-8%', trend: 'down' },
    avgSession: { value: '3:42', change: '+15%', trend: 'up' }
  };

  const topPages = [
    { page: '/home', views: 8432, percentage: 85 },
    { page: '/products', views: 6234, percentage: 63 },
    { page: '/about', views: 3421, percentage: 35 },
    { page: '/contact', views: 2156, percentage: 22 },
    { page: '/blog', views: 1543, percentage: 16 }
  ];

  const trafficSources = [
    { source: '–ü–æ–∏—Å–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã', visits: 45, color: 'bg-blue-500' },
    { source: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', visits: 28, color: 'bg-pink-500' },
    { source: '–ü—Ä—è–º—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã', visits: 18, color: 'bg-green-500' },
    { source: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', visits: 9, color: 'bg-purple-500' }
  ];

  const devices = [
    { device: '–î–µ—Å–∫—Ç–æ–ø', percentage: 52, color: 'bg-primary' },
    { device: '–ú–æ–±–∏–ª—å–Ω—ã–µ', percentage: 38, color: 'bg-secondary' },
    { device: '–ü–ª–∞–Ω—à–µ—Ç—ã', percentage: 10, color: 'bg-accent' }
  ];

  return (
    <div className="p-6 space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold font-poiret">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
          <p className="text-muted-foreground font-inter">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞</p>
        </div>
        <div className="flex items-center space-x-4">
          <Select value={period} onValueChange={setPeriod}>
            <SelectTrigger className="w-40">
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="day">–°–µ–≥–æ–¥–Ω—è</SelectItem>
              <SelectItem value="week">–ù–µ–¥–µ–ª—è</SelectItem>
              <SelectItem value="month">–ú–µ—Å—è—Ü</SelectItem>
              <SelectItem value="year">–ì–æ–¥</SelectItem>
            </SelectContent>
          </Select>
          <Button>
            <Icon name="Download" className="mr-2" size={16} />
            –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞
          </Button>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid md:grid-cols-4 gap-6">
        {[
          { title: '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏', ...analyticsData.visitors, icon: 'Users' },
          { title: '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã', ...analyticsData.pageviews, icon: 'Eye' },
          { title: '–û—Ç–∫–∞–∑—ã', ...analyticsData.bounceRate, icon: 'TrendingDown' },
          { title: '–°–µ—Å—Å–∏—è', ...analyticsData.avgSession, icon: 'Clock' }
        ].map((metric, index) => (
          <Card key={index}>
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-muted-foreground font-inter">{metric.title}</p>
                  <p className="text-2xl font-bold font-poiret">{metric.value}</p>
                  <div className="flex items-center space-x-1 mt-1">
                    <Icon 
                      name={metric.trend === 'up' ? 'TrendingUp' : 'TrendingDown'} 
                      size={12}
                      className={metric.trend === 'up' ? 'text-green-500' : 'text-red-500'}
                    />
                    <span className={`text-sm ${metric.trend === 'up' ? 'text-green-500' : 'text-red-500'}`}>
                      {metric.change}
                    </span>
                  </div>
                </div>
                <Icon name={metric.icon as any} className="h-8 w-8 text-primary" />
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="grid lg:grid-cols-2 gap-6">
        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <Card>
          <CardHeader>
            <CardTitle className="font-poiret">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</CardTitle>
            <CardDescription>–°—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {topPages.map((page, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex-1">
                  <div className="flex items-center justify-between mb-1">
                    <span className="text-sm font-medium font-inter">{page.page}</span>
                    <span className="text-sm text-muted-foreground">{page.views.toLocaleString()}</span>
                  </div>
                  <Progress value={page.percentage} className="h-2" />
                </div>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ */}
        <Card>
          <CardHeader>
            <CardTitle className="font-poiret">–ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞</CardTitle>
            <CardDescription>–û—Ç–∫—É–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤–∞—à–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {trafficSources.map((source, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className={`w-3 h-3 rounded-full ${source.color}`}></div>
                  <span className="text-sm font-medium font-inter">{source.source}</span>
                </div>
                <Badge variant="outline">{source.visits}%</Badge>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ */}
        <Card>
          <CardHeader>
            <CardTitle className="font-poiret">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</CardTitle>
            <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {devices.map((device, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex-1">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium font-inter">{device.device}</span>
                    <span className="text-sm font-bold">{device.percentage}%</span>
                  </div>
                  <Progress value={device.percentage} className="h-3" />
                </div>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* –ì–µ–æ–≥—Ä–∞—Ñ–∏—è */}
        <Card>
          <CardHeader>
            <CardTitle className="font-poiret">–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</CardTitle>
            <CardDescription>–¢–æ–ø-5 —Å—Ç—Ä–∞–Ω –ø–æ –ø–æ—Å–µ—â–µ–Ω–∏—è–º</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {[
              { country: '–†–æ—Å—Å–∏—è', flag: 'üá∑üá∫', visits: 8432, percentage: 67 },
              { country: '–£–∫—Ä–∞–∏–Ω–∞', flag: 'üá∫üá¶', visits: 2156, percentage: 17 },
              { country: '–ë–µ–ª–∞—Ä—É—Å—å', flag: 'üáßüáæ', visits: 1234, percentage: 10 },
              { country: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', flag: 'üá∞üáø', visits: 543, percentage: 4 },
              { country: '–°–®–ê', flag: 'üá∫üá∏', visits: 234, percentage: 2 }
            ].map((country, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <span className="text-lg">{country.flag}</span>
                  <span className="text-sm font-medium font-inter">{country.country}</span>
                </div>
                <div className="text-right">
                  <div className="text-sm font-bold">{country.visits.toLocaleString()}</div>
                  <div className="text-xs text-muted-foreground">{country.percentage}%</div>
                </div>
              </div>
            ))}
          </CardContent>
        </Card>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ –∫–æ–Ω–≤–µ—Ä—Å–∏–π */}
      <Card>
        <CardHeader>
          <CardTitle className="font-poiret">–í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–π</CardTitle>
          <CardDescription>–ü—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç –ø–æ—Å–µ—â–µ–Ω–∏—è –¥–æ –ø–æ–∫—É–ø–∫–∏</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {[
              { stage: '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —Å–∞–π—Ç–∞', count: 12847, conversion: 100 },
              { stage: '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤', count: 8432, conversion: 66 },
              { stage: '–î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É', count: 2156, conversion: 17 },
              { stage: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤', count: 543, conversion: 4 },
              { stage: '–û–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã', count: 432, conversion: 3 }
            ].map((stage, index) => (
              <div key={index} className="relative">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-medium font-inter">{stage.stage}</span>
                  <div className="text-right">
                    <div className="text-sm font-bold">{stage.count.toLocaleString()}</div>
                    <div className="text-xs text-muted-foreground">{stage.conversion}%</div>
                  </div>
                </div>
                <div className="w-full bg-muted rounded-full h-3">
                  <div 
                    className="bg-primary h-3 rounded-full transition-all duration-500"
                    style={{ width: `${stage.conversion}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default Analytics;